name: Build Signed APK and create a release

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY }}
        run: |
          TMP_KEYSTORE_FILE_PATH="${GITHUB_WORKSPACE}"/app/keystore
          mkdir "${TMP_KEYSTORE_FILE_PATH}"
          echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/vlr-gg.jks


      - name: Make gradlew executable
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          touch local.properties
          echo "API_KEY=${{ env.API_TOKEN }}" > local.properties
          chmod +x ./gradlew

      - name: build prod
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          FIREBASE_CONFIG_DEV: ${{ secrets.FIREBASE_CONFIG }}
        run: |
          touch app/google-services.json
          echo $FIREBASE_CONFIG_DEV >> app/google-services.json
          ./gradlew app:assembleRelease --stacktrace

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Build Artifacts
          path: app/build/outputs/

      - name: APK name and path
        id: apk_details
        run: |
          echo "VERSION_NAME=$(echo $(find app/build/outputs/apk/release/  "*.apk" -type f -size +1M -print -quit | head -n1) | awk -F\( '{print $NF}' | awk -F\) '{print $1}')" >> $GITHUB_ENV
          echo "APK=$(find app/build/outputs/apk/release/  "*.apk" -type f -size +1M -print -quit | head -n1)" >> $GITHUB_ENV

      - name: Print Build details
        run: |
          echo "${{ env.APK }}"
          echo "${{ env.VERSION_NAME }}"

      - name: Push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: "${{ env.VERSION_NAME }}"
          tag_prefix: ""
          default_prerelease_bump: false

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          artifacts: ${{ env.APK }}

      - uses: actions/checkout@v3
      - run: |
          echo ${{ env.VERSION_NAME }} > version
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update version"
          git push

      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          document: ${{ env.APK }}
          message: |
            Published ${{ env.VERSION_NAME }}
            Release available at https://github.com/${{ github.repository }}/releases/tag/${{steps.tag_version.outputs.new_tag}}
