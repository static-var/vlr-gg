import kotlinx.kover.api.KoverTaskExtension

plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 33
    namespace 'dev.staticvar.vlr'

    defaultConfig {
        applicationId "dev.staticvar.vlr"
        minSdk 23
        targetSdk 33
        versionCode 38
        versionName "v0.2.12"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            def keystoreProperties = new Properties()
            def keystorePropertiesFile = rootProject.file('local.properties')
            if (keystorePropertiesFile.exists()) {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            }
            storeFile = file("keystore/vlr-gg.jks")
            storePassword System.getenv("SIGNING_STORE_PASSWORD") ?: keystoreProperties['store.password']
            keyPassword System.getenv("SIGNING_KEY_PASSWORD") ?: keystoreProperties['key.password']
            keyAlias System.getenv("SIGNING_KEY_ALIAS") ?: keystoreProperties['key.alias']
        }
    }

    buildTypes {
        def localProperties = new Properties()
        def localPropertiesFile = rootProject.file('local.properties')
        if (localPropertiesFile.exists()) {
            localProperties.load(new FileInputStream(localPropertiesFile))
        }
        benchmark {
            buildConfigField "String", "TOKEN", System.getenv("API_TOKEN") ?: localProperties['token']
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        debug {
            minifyEnabled false
            archivesBaseName = "$defaultConfig.applicationId-$defaultConfig.versionCode($defaultConfig.versionName)"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "TOKEN", System.getenv("API_TOKEN") ?: localProperties['token']
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        release {
            shrinkResources true
            minifyEnabled true
            buildConfigField "String", "TOKEN", System.getenv("API_TOKEN") ?: localProperties['token']
            archivesBaseName = "$defaultConfig.applicationId-$defaultConfig.versionCode($defaultConfig.versionName)"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn",
                             "-opt-in=kotlin.contracts.ExperimentalContracts",
                             "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                             "-opt-in=kotlinx.serialization.ExperimentalSerializationApi",
                             "-opt-in=kotlin.time.ExperimentalTime",
                             "-opt-in=androidx.compose.ui.text.ExperimentalTextApi",
                             "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi",
                             "-opt-in=androidx.compose.animation.ExperimentalAnimationApi",
                             "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi",
                             "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api",
                             "-opt-in=androidx.lifecycle.compose.ExperimentalLifecycleComposeApi",
                             "-opt-in=com.google.accompanist.pager.ExperimentalPagerApi",
                             "-opt-in=androidx.compose.runtime.InternalComposeApi"]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler
    }
    packagingOptions {
        jniLibs {
            excludes += ['/META-INF/{AL2.0,LGPL2.1}']
        }
        resources {
            excludes += ['/META-INF/{AL2.0,LGPL2.1}', 'META-INF/DEPENDENCIES']
        }
    }
    bundle {
        storeArchive {
            enable = false
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.compose.material3:material3:1.0.0-alpha16'

    def compose_version = '1.3.0-alpha03'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-text-google-fonts:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

    implementation 'androidx.navigation:navigation-compose:2.5.1'

    def lifecycle_version = "2.6.0-alpha01"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation "androidx.glance:glance-appwidget:1.0.0-alpha03"

    implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation 'androidx.webkit:webkit:1.4.0'

    implementation "androidx.work:work-runtime-ktx:2.7.1"
    implementation "androidx.profileinstaller:profileinstaller:1.2.0"

    implementation "com.michael-bull.kotlin-result:kotlin-result:1.1.16"

    def accompanist = '0.25.1'
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist"
    implementation "com.google.accompanist:accompanist-pager:$accompanist"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist"
    implementation "com.google.accompanist:accompanist-webview:$accompanist"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanist"

    implementation "androidx.browser:browser:1.4.0"

    // Coroutines
    def coroutines_version = "1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-common:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    // Room
    def room_version = "2.4.3"
    implementation "androidx.room:room-runtime:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:30.3.2')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'

    def ktor_version = "2.1.0"
    implementation("io.ktor:ktor-client-okhttp:$ktor_version")
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-encoding:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"

    implementation("com.squareup.okhttp3:okhttp-brotli:4.10.0")
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")

    implementation 'org.jsoup:jsoup:1.15.2'
    implementation "com.github.skydoves:landscapist-glide:1.6.1"

    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.2.0")

    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "com.google.truth.extensions:truth-java8-extension:1.1.3"

    testImplementation "io.mockk:mockk:1.12.5"
    testImplementation 'app.cash.turbine:turbine:0.9.0'

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"

    testImplementation "org.robolectric:robolectric:4.8.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
}